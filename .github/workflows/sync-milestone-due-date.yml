name: Sync Milestone Due Date to Project Field

on:
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Sync Milestone Due Date
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = 1; // ðŸ‘ˆ Change this to test with a real issue
            const PROJECT_ID = "YOUR_PROJECT_ID"; // ðŸ‘ˆ Replace this
            const FIELD_ID = "YOUR_DATE_FIELD_ID"; // ðŸ‘ˆ Replace this

            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
            });

            if (!issue.milestone) {
              console.log("No milestone.");
              return;
            }

            const milestone = await github.rest.issues.getMilestone({
              owner: context.repo.owner,
              repo: context.repo.repo,
              milestone_number: issue.milestone.number,
            });

            const dueDate = milestone.data.due_on;
            if (!dueDate) {
              console.log("No due date on milestone.");
              return;
            }

            const query = `
              query ($owner: String!, $repo: String!, $issueNumber: Int!) {
                repository(owner: $owner, name: $repo) {
                  issue(number: $issueNumber) {
                    projectItems(first: 10) {
                      nodes {
                        id
                        project {
                          id
                        }
                      }
                    }
                  }
                }
              }
            `;

            const variables = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issueNumber,
            };

            const result = await github.graphql(query, variables);
            const items = result.repository.issue.projectItems.nodes;
            const item = items.find(item => item.project.id === PROJECT_ID);

            if (!item) {
              console.log("Issue not in project.");
              return;
            }

            const mutation = `
              mutation ($projectId: ID!, $itemId: ID!, $fieldId: ID!, $date: Date!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { date: $date }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `;

            await github.graphql(mutation, {
              projectId: PROJECT_ID,
              itemId: item.id,
              fieldId: FIELD_ID,
              date: dueDate,
            });

            console.log("Updated project field with due date.");
